openapi: 3.0.1
info:
  title: AWS SDK for Natural Language
  description: Use AWS with natural language
  version: 'v1'
servers:
  - url: https://gpt4-plugin-test-mataslauzadis.vercel.app/
paths:
  /com/amazonaws/s3/PutObjectRequest:
    POST:
      operationId: PutObjectRequest
      summary: <p>Adds an object to a bucket. You must have WRITE permissions on a bucket to add an object
         to it.</p>
         <p>Amazon S3 never adds partial objects; if you receive a success response, Amazon S3 added the
         entire object to the bucket.</p>
         <p>Amazon S3 is a distributed system. If it receives multiple write requests for the same object
         simultaneously, it overwrites all but the last object written. Amazon S3 does not provide object
         locking; if you need this, make sure to build it into your application layer or use
         versioning instead.</p>
         <p>To ensure that data is not corrupted traversing the network, use the
            <code>Content-MD5</code> header. When you use this header, Amazon S3 checks the object
         against the provided MD5 value and, if they do not match, returns an error. Additionally,
         you can calculate the MD5 while putting an object to Amazon S3 and compare the returned ETag to
         the calculated MD5 value.</p>
         <note>
            <ul>
               <li>
                  <p>To successfully complete the <code>PutObject</code> request, you must have the 
               <code>s3:PutObject</code> in your IAM permissions.</p>
               </li>
               <li>
                  <p>To successfully change the objects acl of your <code>PutObject</code> request, 
               you must have the <code>s3:PutObjectAcl</code> in your IAM permissions.</p>
               </li>
               <li>
                  <p> The <code>Content-MD5</code> header is required for any request to upload an object
                  with a retention period configured using Amazon S3 Object Lock. For more information about
                  Amazon S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html">Amazon S3 Object Lock Overview</a>
                  in the <i>Amazon S3 User Guide</i>. </p>
               </li>
            </ul>
         </note>
         <p>
            <b>Server-side Encryption</b>
         </p>
         <p>You can optionally request server-side encryption. With server-side encryption, Amazon S3 encrypts 
         your data as it writes it to disks in its data centers and decrypts the data
         when you access it. You have the option to provide your own encryption key or use Amazon Web Services
         managed encryption keys (SSE-S3 or SSE-KMS). For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html">Using Server-Side
            Encryption</a>.</p>
         <p>If you request server-side encryption using Amazon Web Services Key Management Service (SSE-KMS), you can enable 
         an S3 Bucket Key at the object-level. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html">Amazon S3 Bucket Keys</a> in the 
         <i>Amazon S3 User Guide</i>.</p>
         <p>
            <b>Access Control List (ACL)-Specific Request
         Headers</b>
         </p>
         <p>You can use headers to grant ACL- based permissions. By default, all objects are
         private. Only the owner has full access control. When adding a new object, you can grant
         permissions to individual Amazon Web Services accounts or to predefined groups defined by Amazon S3. These
         permissions are then added to the ACL on the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html">Access Control List
            (ACL) Overview</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-using-rest-api.html">Managing ACLs Using the REST
            API</a>. </p>
         <p>If the bucket that you're uploading objects to uses the bucket owner enforced setting
         for S3 Object Ownership, ACLs are disabled and no longer affect permissions. Buckets that
         use this setting only accept PUT requests that don't specify an ACL or PUT requests that
         specify bucket owner full control ACLs, such as the <code>bucket-owner-full-control</code> canned
         ACL or an equivalent form of this ACL expressed in the XML format. PUT requests that contain other
         ACLs (for example, custom grants to certain Amazon Web Services accounts) fail and return a
            <code>400</code> error with the error code
         <code>AccessControlListNotSupported</code>.</p>
         <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html"> Controlling ownership of
         objects and disabling ACLs</a> in the <i>Amazon S3 User Guide</i>.</p>
         <note>
            <p>If your bucket uses the bucket owner enforced setting for Object Ownership, 
            all objects written to the bucket by any account will be owned by the bucket owner.</p>
         </note>
         <p>
            <b>Storage Class Options</b>
         </p>
         <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The
         STANDARD storage class provides high durability and high availability. Depending on
         performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses
         the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the
         <i>Amazon S3 User Guide</i>.</p>
         <p>
            <b>Versioning</b>
         </p>
         <p>If you enable versioning for a bucket, Amazon S3 automatically generates a unique version ID
         for the object being stored. Amazon S3 returns this ID in the response. When you enable
         versioning for a bucket, if Amazon S3 receives multiple write requests for the same object
         simultaneously, it stores all of the objects.</p>
         <p>For more information about versioning, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/AddingObjectstoVersioningEnabledBuckets.html">Adding Objects to
            Versioning Enabled Buckets</a>. For information about returning the versioning state
         of a bucket, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html">GetBucketVersioning</a>. </p>
         <p class="title">
            <b>Related Resources</b>
         </p>
         <ul>
            <li>
               <p>
                  <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html">CopyObject</a>
               </p>
            </li>
            <li>
               <p>
                  <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a>
               </p>
            </li>
         </ul>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: com.amazonaws.s3#PutObjectRequest
      responses:
        "200":
          description: "OK"
          content:
            text:
              "OK"

components:
  schemas:
    com.amazonaws.s3#AbortMultipartUploadRequest:
      type: object
      properties:
        com.amazonaws.s3#BucketName:
          type: string
          description: <p>The bucket name to which the upload was taking place. </p>
         <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
         <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
               <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
        com.amazonaws.s3#ObjectKey:
          type: string
          description: <p>Key of the object for which the multipart upload was initiated.</p>
        com.amazonaws.s3#MultipartUploadId:
          type: string
          description: <p>Upload ID that identifies the multipart upload.</p>
        com.amazonaws.s3#RequestPayer:
          type: string
          enum: [requester]
        com.amazonaws.s3#AccountId:
          type: string
          description: <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    com.amazonaws.s3#CompleteMultipartUploadRequest:
      type: object
      properties:
        com.amazonaws.s3#BucketName:
          type: string
          description: <p>Name of the bucket to which the multipart upload was initiated.</p>
         <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
         <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
               <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
        com.amazonaws.s3#ObjectKey:
          type: string
          description: <p>Object key for which the multipart upload was initiated.</p>
        com.amazonaws.s3#CompletedMultipartUpload:
          type: object
          properties:
